// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NestedValueObject;

namespace NestedValueObject.Migrations
{
    [DbContext(typeof(ParentContext))]
    partial class ParentContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NestedValueObject.Parent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("Parents");
                });

            modelBuilder.Entity("NestedValueObject.Parent", b =>
                {
                    b.OwnsOne("NestedValueObject.NestedValueObject.Address", "PrimaryAddress", b1 =>
                        {
                            b1.Property<int>("ParentId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("BuildingNumber")
                                .IsRequired()
                                .HasColumnName("Primary_BuildingName");

                            b1.HasKey("ParentId");

                            b1.ToTable("Parents");

                            b1.HasOne("NestedValueObject.Parent")
                                .WithOne("PrimaryAddress")
                                .HasForeignKey("NestedValueObject.NestedValueObject.Address", "ParentId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
